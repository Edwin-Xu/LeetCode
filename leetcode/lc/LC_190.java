package leetcode.lc;

import java.util.*;

/**
 * Created by Edwin Xu on 10/12/2020 12:05 AM.
 * 190. 颠倒二进制位
 * 颠倒给定的 32 位无符号整数的二进制位。
 *
 *
 *
 * 示例 1：
 *
 * 输入: 00000010100101000001111010011100
 * 输出: 00111001011110000010100101000000
 * 解释: 输入的二进制串 00000010100101000001111010011100 表示无符号整数 43261596，
 *      因此返回 964176192，其二进制表示形式为 00111001011110000010100101000000。
 * 示例 2：
 *
 * 输入：11111111111111111111111111111101
 * 输出：10111111111111111111111111111111
 * 解释：输入的二进制串 11111111111111111111111111111101 表示无符号整数 4294967293，
 *      因此返回 3221225471 其二进制表示形式为 10111111111111111111111111111111 。
 */

public class LC_190 {
    public int reverseBits(int n) {
        for (int i = 0, j = 31; i < j; i++, j--) {
            int L = n & (1 << j);
            int R = n & (1 << i);
            if ((L == 0 && R != 0) || (R == 0 && L != 0)) {
                n ^= (1 << i);
                n ^= (1 << j);
            }
        }
        return n;
    }

    public static void main(String[] args) {
        System.out.println(String.valueOf(Integer.MAX_VALUE).length());
    }
}
